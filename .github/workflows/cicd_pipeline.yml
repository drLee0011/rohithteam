name: Terraform CI/CD Pipeline

on:
  push:
    branches:
      - master  # Trigger when code is pushed to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.0'  # Specify the desired Terraform version

      # Set up Ansible
      - name: Set up Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible
          
      # Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Terraform apply
      - name: Terraform Apply
        env:
          AWS_SSH_PUBLIC_KEY: ${{ secrets.AWS_SSH_PUBLIC_KEY }}  # Reference the GitHub secret
        run: |
          terraform apply -auto-approve

      # Get EC2 Public IP from Terraform Output
      - name: Set EC2 Public IP
        run: |
          export EC2_PUBLIC_IP=$(terraform output -raw ec2_public_ip)
          echo "EC2_PUBLIC_IP=${EC2_PUBLIC_IP}" >> $GITHUB_ENV

      # Prepare the Ansible hosts file and deploy Docker container
      - name: Run Ansible Playbook to Deploy Docker
        run: |
          echo "[aws]" > hosts.ini
          echo "${{ env.EC2_PUBLIC_IP }}" >> hosts.ini  # Use EC2 public IP
          echo "[aws:vars]" >> hosts.ini
          echo "ansible_user=ec2-user" >> hosts.ini  # Or 'ubuntu' depending on the AMI
          echo "ansible_ssh_private_key_file=${{ secrets.AWS_SSH_PRIVATE_KEY }}" >> hosts.ini
          
          ansible-playbook -i hosts.ini setup-docker.yml  # Ensure you have this playbook defined

    
